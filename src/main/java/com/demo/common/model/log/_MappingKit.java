package com.demo.common.model.log;

import com.jfinal.plugin.activerecord.ActiveRecordPlugin;

/**
 * Generated by JFinal, do not modify this file.
 * <pre>
 * Example:
 * public void configPlugin(Plugins me) {
 *     ActiveRecordPlugin arp = new ActiveRecordPlugin(...);
 *     _MappingKit.mapping(arp);
 *     me.add(arp);
 * }
 * </pre>
 */
public class _MappingKit {
	
	public static void mapping(ActiveRecordPlugin arp) {
		arp.addMapping("biz_sys_info", "sys_id", BizSysInfo.class);
		arp.addMapping("ftp_task", "id", FtpTask.class);
		arp.addMapping("log_collect", "collect_id", LogCollect.class);
		arp.addMapping("log_collect_machine", "machine_id", LogCollectMachine.class);
		arp.addMapping("log_source_field", "field_id", LogSourceField.class);
		arp.addMapping("log_source_info", "src_id", LogSourceInfo.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME
		arp.addMapping("qrtz_blob_triggers", "SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME", QrtzBlobTriggers.class);
		// Composite Primary Key order: CALENDAR_NAME,SCHED_NAME
		arp.addMapping("qrtz_calendars", "CALENDAR_NAME,SCHED_NAME", QrtzCalendars.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME
		arp.addMapping("qrtz_cron_triggers", "SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME", QrtzCronTriggers.class);
		// Composite Primary Key order: ENTRY_ID,SCHED_NAME
		arp.addMapping("qrtz_fired_triggers", "ENTRY_ID,SCHED_NAME", QrtzFiredTriggers.class);
		// Composite Primary Key order: JOB_GROUP,JOB_NAME,SCHED_NAME
		arp.addMapping("qrtz_job_details", "JOB_GROUP,JOB_NAME,SCHED_NAME", QrtzJobDetails.class);
		// Composite Primary Key order: LOCK_NAME,SCHED_NAME
		arp.addMapping("qrtz_locks", "LOCK_NAME,SCHED_NAME", QrtzLocks.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP
		arp.addMapping("qrtz_paused_trigger_grps", "SCHED_NAME,TRIGGER_GROUP", QrtzPausedTriggerGrps.class);
		// Composite Primary Key order: INSTANCE_NAME,SCHED_NAME
		arp.addMapping("qrtz_scheduler_state", "INSTANCE_NAME,SCHED_NAME", QrtzSchedulerState.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME
		arp.addMapping("qrtz_simple_triggers", "SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME", QrtzSimpleTriggers.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME
		arp.addMapping("qrtz_simprop_triggers", "SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME", QrtzSimpropTriggers.class);
		// Composite Primary Key order: SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME
		arp.addMapping("qrtz_triggers", "SCHED_NAME,TRIGGER_GROUP,TRIGGER_NAME", QrtzTriggers.class);
		arp.addMapping("src_collect_machine", "id", SrcCollectMachine.class);
		arp.addMapping("sys_dict", "id", com.demo.common.model.SysDict.class);
	}
}


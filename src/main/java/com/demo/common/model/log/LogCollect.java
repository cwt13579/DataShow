package com.demo.common.model.log;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;

import com.demo.common.model.log.base.BaseLogCollect;
import com.jfinal.plugin.activerecord.Page;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class LogCollect extends BaseLogCollect<LogCollect> {
	public static final LogCollect dao = new LogCollect();

	public Page<LogCollect> getAllLogCollect(int current, int pageSize,
			Map<String, String> map) {
		List<Object> paramList = new ArrayList<Object>();
		StringBuilder condition = new StringBuilder();
		String name = map.get("mechine_name");

		String from = "FROM  log_collect a,sys_dict b where b.data_type='CollectStatus' and a.status=b.data_value  ";
		condition.append(from);

		if (!StringUtils.isBlank(name)) {
			condition.append(" and a.mechine_name like ?");
			paramList.add("%" + name + "%");
		}

		Page<LogCollect> page = paginate(current, pageSize, "SELECT a.*,b.data_name as status_str ",
				condition.toString(), paramList.toArray(new Object[] {}));

		if (page != null && page.getList() != null) {
			if (current > 1 && page.getList().isEmpty()) {
				page = getAllLogCollect(current - 1, pageSize, map);
			}
		}
		return page;
	}

	public List<LogCollect> getLogSourceInfoList() {
		return find("select * from log_collect");
	}
}
